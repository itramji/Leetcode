class Solution {
    
  /*  
  
  Keyword to note - permutation (means unsorted sortable subarray)
  
1. We know that our arr is permutation of array 0,1,2,3,...,array.length-1.
2. This means value==index eg: 4 should be under index 4, 2 under 2 and so on.
3. We may observe that we are able to sort subarray only if during iterating through array max value in array till now was equals to current index.
4. So we need only to keep track of current index, and max value till now, and of course counter. And increment this counter when max==idx.

*/
    
    public int maxChunksToSorted(int[] arr) {
        
        int counter=0;
        int cur = arr[0];
        
        for(int i=0; i<arr.length;i++){
            cur = Math.max(cur, arr[i]); //move until index == cur
            if(i==cur) counter++;
        }
            
        return counter;
        
    }
}
