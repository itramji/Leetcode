class Solution {
    //1. Find first decreasing number index from back --> i
    //2. Find first largest number index to i --> j
    //3. Swap i & j
    //4. Reverse i+1 to last
    public void nextPermutation(int[] nums) {
        
        int i = nums.length-2;
        while(i>=0 && nums[i] >= nums[i+1]) i--;
        
        if(i>=0){ //Swap only the pattern is found
            int j = nums.length-1;
            while(nums[j]<=nums[i]) j--;
        
            swap(nums, i, j);
        }
        
        reverse(nums, i+1, nums.length-1);
        
    }
    
    private void swap(int[] arr, int i, int j){
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
    
    private void reverse(int[] arr, int i, int j){
        while(i<j) swap(arr, i++, j--);
    }
}
